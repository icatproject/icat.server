<html>
<head>
<title>ICAT Server Release Notes</title>
</head>
<body>

	<h1>ICAT Server Release Notes</h1>

	<h2>6.0.0</h2>
	<p>Upgrade from JavaEE to JakartaEE 10. Requires Java 11+ and an application server that supports JakartaEE 10 such as Payara 6.</p>

	<h2>5.0.1</h2>
	<p>Fix authorization of lists of ICAT entities and use Python3 for scripts</p>

	<h2>5.0.0</h2>
	<p>Schema changes and additions</p>
	<ul>
		<li>Add a relationship between Dataset and Instrument (Issue 228).</li>
		<li>Add entity classes Technique and DatasetTechnique (Issue 230).</li>
		<li>Add columns for investigation and dataset size (Issue 211) and fileCount (Issue 238).</li>
		<li>Add tables DataPublication, DataPublicationDate, DataPublicationUser,
			RelatedItem, and FundingReference (Issue 200).</li>
		<li>Add tables DataPublicationFunding and InvestigationFunding (Issue 249).</li>
		<li>Add table Affiliation (Issue 248).</li>
		<li>Add tables DataPublicationType and DataCollectionInvestigation (Issue 261).</li>
		<li>Add a relationship between Investigation and Facility Cycle (Issue 259)</li>
	</ul>

	<h2>4.11.1</h2>
	<p>Re-release to fix permissions and encoding issues with 4.11.0</p>

	<h2>4.11.0</h2>
	<p>Update SOAP interface and Python 3 compatibility</p>
	<ul>
		<li>Enable multiple field selection via SOAP interface 
			(Issue 245).</li>
		<li>Make python scripts python3 compatible and upgrade icat.utils version to 4.16.1
			(PR 226).</li>
	</ul>

	<h2>4.10.0</h2>
	<p>Make some additions to the schema</p>
	<ul>
		<li>Add an attribute pid to Instrument, ParameterType, and Sample
			(Issue 198).</li>
		<li>Add an optional relation between Shift and Instrument (Issue 199).</li>
		<li>Add attributes familyName, givenName, and affiliation to User
			(Issue 201).</li>
		<li>Add an attribute pid to Study (Issue 216).</li>
		<li>Add an attribute endDate to Study (Issue 219).</li>
		<li>Fixes bugs in converting some types to JSON (Issue 220 and 196).</li>
	</ul>

	<h2>4.9.3</h2>
	<p>Bug fixes</p>
	<ul>
		<li>Make the message transmitters more fault-tolerant.</li>
		<li>Upgrade commons-fileupload from 1.3 to 1.3.3 because of security vulnerabilities (<a href="https://nvd.nist.gov/vuln/detail/CVE-2016-3092">CVE-2016-3092</a>, <a href="https://nvd.nist.gov/vuln/detail/CVE-2016-1000031">CVE-2016-1000031</a>, <a href="https://nvd.nist.gov/vuln/detail/CVE-2014-0050">CVE-2014-0050</a>).</li>
	</ul>

	<h2>4.9.2</h2>
	<p>Bug fixes</p>
	<ul>
		<li>Create a new option to configure which entities are included in the Lucene index.
		For example, remove 'Datafile' and 'DatafileParameter' if the number of datafiles exceeds lucene's limit of 2^32 entries in an index
		lucene.entitiesToIndex = Datafile Dataset Investigation InvestigationUser DatafileParameter DatasetParameter InvestigationParameter Sample</li>
		<li>Upgrade the Apache HttpClient from 4.3.4 to 4.3.6 because of a security vulnerability (<a href="https://nvd.nist.gov/vuln/detail/CVE-2015-5262">CVE-2015-5262</a>).</li>
		<li>Changes to tests and the default developer configuration to remove references to Steve Fisher's computer.</li>
	</ul>

	<h2>4.9.1</h2>
	<p>Bug fixes</p>
	<ul>
		<li>Restore the documentation for the RESTful API</li>
		<li>Add to run.properties: lucene.directory,
			lucene.backlogHandlerIntervalSeconds and
			lucene.enqueuedRequestIntervalSecond to deal with batching requests
			to icat.lucene. This greatly improves ingest performance.</li>
	</ul>

	<h2>4.9.0</h2>
	<p>Add SOAP call getAuthenticatorInfo, support of authenticator and
		lucene services and bug fixes</p>
	<ul>
		<li>Simplify output from REST properties call</li>
		<li>Add SOAP call getAuthenticatorInfo</li>
		<li>Add SOAP call getVersion() which is identical to
			getApiVersion()</li>
		<li>Updated property file names to run.properties and
			setup.properties</li>
		<li>run.properties no longer has the logback.xml property. Any
			logback.xml file in the installation directory will be applied but
			will not be copied to the config directory. There is a
			logback.xml.example file in the distribution which can be copied to
			logback.xml and edited.</li>
		<li>An authenticator may be a restful web service rather than a
			possibly remote EJB.</li>
		<li>The lucene calls are now handled by a separate server
			allowing deployment of more than one ICAT to share a single lucene
			server. Most of the lucene configuration has been moved to the lucene
			server.</li>
		<li>Fix bug in update which was making it very slow when lucene
			was enabled</li>
		<li>Works with Payara but has intermittent problems with
			Glassfish 4.0 and 4.1.1 so please use payara41.</li>
		<li>Synchronization of public tables and public steps is now done
			by restful calls rather than JMS. This means that the run.properties
			file needs a list of other servers to synchronize with.</li>
	</ul>

	<h2>4.8.0</h2>
	<p>Support update operations with control on individual attributes
		and bug fixes</p>
	<ul>
		<li>Protect the SOAP interface from bad plugin mnemonics on login
			calls</li>
		<li>Support update operations with control on individual
			attributes</li>
		<li>The testicat program has been recoded to use only REST calls.</li>
		<li>A new clone operation has been added to the REST interface</li>
		<li>A new property "key" may be specified in the icat.properties
			file. If there is an IDS server in use and it has a key for digest
			protection of Datafile.location then this key value must be
			identical.</li>
	</ul>

	<h2>4.7.0</h2>
	<p>Enhanced Rest interface and changes to the authorization code</p>
	<ul>
		<li>A restful select can mention multiple quantities to be
			returned</li>
		<li>A major re-write of the authorization code should make it
			more efficient in most cases as all the work is carried out by the
			database unless the INCLUDE mechanism is used. This has required that
			the Rule table has a slightly different structure from 4.6.0 so the
			correct upgrade procedure from earlier versions must be followed.</li>
		<li>COUNT queries will not fail because they are counting more
			than maxEntities values</li>
		<li>A couple of bugs in eclipse link result in incorrect
			information being returned. One of these bugs was trapped previously
			but with the generality of the queries now supported it has become
			impractical to trap.
			<ul>
				<li>"SELECT f from Facility WHERE f.id = 1 LIMIT 1,10" which
					should always return an empty list now ignores the LIMIT clause.</li>
				<li>"SELECT ds.complete FROM Dataset ds" only returns the false
					values but that "SELECT ds.id, ds.complete FROM Dataset ds" works
					properly.</li>
			</ul>
		</li>
		<li>A restful delete call has been added</li>
		<li>The delete(Many) call, whether restful or not, checks the
			authz rules for all objects that will be deleted by the cascade
			mechanism.</li>
		<li>A restful write call to do both create(Many) and update(Many)
			has been written. Notifications are sent for all objects created
			and/or updated. Authz is also applied to all new or updated entries.</li>
		<li>Notifications are no longer generated for deletes as the
			information could never be used. This means that only C and U are
			valid notification letters in the icat.properties file.</li>
		<li>DataCollection now has a doi attribute</li>
		<li>Call logging has been changed to generate only jms messages.
			It is very similar to the call logging in the IDS. It is controlled
			by a log.list in the icat.properties which may contain one or more of
			READ, WRITE, SESSION and INFO.</li>
		<li>Updates whether from the SOAP call or the restful write call
			are both checked for UPDATE permission before the call and if a
			relationship field is changed which is used to identify that object
			then DELETE permission is required before the change and CREATE
			permission afterwards.</li>
		<li>Added attributes email and orcidId to the User table</li>
		<li>testicat and icatadmin have certificate checking disabled.
			This used to be the normal behaviour but newer version of python, by
			default, expect a certificate accessible by openssl.</li>
		<li>Produce an error message rather than a null pointer exception
			if an invalid authenticator mnemonic is used in a login call.</li>
		<li>Added "isLogedIn" REST call</li>
		<li>Fixed bug when trying to read or write ParameterValueType
			values (an enum) through REST call. These are now represented as json
			string values.</li>
		<li>Fixed bug trying to read back an individual date value
			through a REST call.</li>
		<li>Remove db.vendor and add db.target and db.logging to
			icat-setup.properties.</li>
		<li>The jdbc driver jar if present in the domain's lib directory
			must be moved to lib/ext.</li>
	</ul>

	<h2>4.6.1</h2>
	<p>Bug fix release</p>
	<ul>
		<li>Previously the update call failed if a Datafile was passed in
			with all datafileCreateTime, datafileModTime and modTime all set to
			null. If the Datafile was fetched, modified in memory and then update
			was called then modTime would be set and the problem would not reveal
			itself.</li>
		<li>It should also be noted that from release 4.6.0 Java 8 is
			required to run the code.</li>
	</ul>

	<h2>4.6.0</h2>
	<p>Small change to icat.properties</p>
	<ul>
		<li>notification.list and log.list may now be omitted but must
			not be present and empty in the icat.properties file</li>
		<li>Provide a "getProperties()" restful call to find out what can
			be revealed about a server without a sessionId. This includes
			maxEntities and information about the available authenticators.</li>
		<li>Support the ESCAPE keyword in JPQL queries.</li>
		<li>New calls added to the restful interface for lucene queries.
		</li>
		<li>Documentation for the restful interface is now generated by
			MireDot.</li>
		<li>Changes to properties files to work with container
			independent setup script.</li>
		<li>Change from log4j to slf4j with logback</li>
		<li>Corrected the "Study" entity to avoid NullPointer exceptions</li>
		<li>Fixed a resource leak in lucene populate</li>
		<li>Lucene populate is now much faster. This is mainly because it
			uses multiple threads</li>
		<li>It is recommended to avoid this version of ICAT if you are
			using multiple icat servers as testing of such configurations has not
			been carried out.</li>
	</ul>

	<h2>4.5.1</h2>
	<p>Fix bug where ICAT won't start up with an empty lucene index</p>

	<h2>4.5.0</h2>
	<p>Remove lucene calls and apply bug fixes.</p>
	<ul>
		<li>Permit lucene not to be used by omitting references in
			icat.setup.</li>
		<li>All lucene calls have been commented out - they will be
			reinstated in 4.6 but they will be different.</li>
		<li>Allow queries of the form "SELECT a.b.c FROM ..." This was
			not documented but used to work in ICAT 4.3 and is standard JPQL.</li>
		<li>Provide better protection against queries that are getting
			too large a quantity of data back from the database. Previously the
			"maxEntities" check was only made at the time when the XML response
			to the user was generated by which time it could have been too late.
			A side effect of this is that in some cases when an aggregate
			function is part of a query which would of course only return one
			record this may now fail if the data being aggregated are very large.
			Even if such queries are handled by the database, SUM and AVG are
			potentially very slow as they cannot benefit from any indexing.</li>
		<li>Fixed the ordering of entities appearing in the output file
			when using exportData in the restful API so that the file can be
			re-imported.</li>
		<li>Instead of doubled up '"' characters use '\"' and also
			introduce \b \t \n \f \r \\ and the not strictly necessary \' for the
			import export format.</li>
		<li>Avoid the use of a sequence table for allocating IDs. It
			should be noted that a side effect of this is that for MySQL there is
			no longer a global ID sequence but the ID sequences are specific to a
			table.</li>
		<li>LIMIT clause in the query now works properly when searching
			by id. This requires a manual schema upgrade if you already have an
			ICAT installed.</li>
		<li>Ensure that createTime and endTime are represented by ISO
			8601 style json strings like other TIMESTAMP fields using the RESTful
			search call.</li>
		<li>Provide protection against an EclipseLink bug with Oracle
			which resulted in BigDecimal objects being returned instead of Long
			or Double values when MIN or MAX of a value of that type was
			requested.</li>
		<li>The documentation for the rootUserNames parameter has been
			updated to match a change introduced in release 4.4 whereby users
			listed in rootUserNames have full access to all tables.</li>
		<li>json returned by restful calls now encodes numbers and
			booleans correctly.</li>
		<li>The restful calls now produce CORS headers.</li>
	</ul>

	<h2>4.4.0</h2>
	<p>This introduces a number of "RESTful" calls and has some other
		small improvements and bug fixes.</p>
	<ul>
		<li>A bug in the authorization computation has been fixed which
			was previously prohibiting operations that should have been allowed
			in some cases where multiple authorization rules were relevant.</li>
		<li>A partial prototype of a "RESTful" interface has been added.
		</li>
		<li>There is a new parameter maxEntities which must be specified
			in icat.properties to restrict the total number of entities returned
			in calls to get, search and searchText.</li>
		<li>There is a new parameter maxIdsInQuery which must be
			specified in icat.properties to restrict the size of ICAT generated
			queries. This must not exceed 1000 if Oracle is being used.</li>
		<li>There are new parameters importCacheSize and exportCacheSize
			which must be specified in icat.properties to restrict the size of
			caches used during import and export. The cache is local to a call to
			import or export to ensure that authorization rules are enforced. As
			a by-product modifications to ICAT are less likely to result in stale
			information being returned from the cache.</li>
		<li>ID values are obtained from the database SEQUENCE table in
			groups of 500 rather than 50 to improve performance. This is to
			circumvent a problem seen occasionally in Oracle.</li>
		<li>The DISTINCT keyword now works as in regular JPQL.</li>
		<li>Queries are now truncated to 4000 characters before storing
			them in the table or file log.</li>
		<li>The installation script has been made more robust and will
			also ensure that JDBC connectors are set up in a resilient manner for
			Oracle RAC servers.</li>
		<li>It is now treated as an error to have redundant paths in an
			INCLUDE clause.</li>
		<li>The application is now built and deployed as a .war files
			rather than a .ear file which makes it easier to deploy on Wildfly.</li>
		<li>The InvestigationGroup has been introduced. It is expected
			that this will be generally used in Rule based authorization in
			preference to InvestigationUser except for those cases where the role
			of the individual is significant.</li>
		<li>The role field in the InvestigationUser is now part of the
			key and can now not be null. This allows a User to have multiple
			roles relative to an Investigation</li>
		<li>The Rule.what column has been increased in length from the
			default of 255 to 1024.</li>
	</ul>

	<h2>4.3.3</h2>
	<p>This is a bug fix release with support for a group of ICATs
		working together. It is not a cluster in the Glassfish sense.</p>
	<ul>
		<li>The isAccessAllowed call, when used to check CREATE access,
			is now protected from invalid input.</li>
		<li>All standard JPQL functions are now accepted in search()
			calls.</li>
		<li>Queries returning results of aggregate functions should
			always return an array of length 1. However, due to the behaviour of
			JAXB a list containing just a null is not transmitted properly and
			instead an empty list is returned. This is a problem with the
			functions MIN, MAX, SUM and AVG all of which return null when they
			have no data to process. The COUNT function was also returning an
			empty list when it had no data but now returns a list containing 0L.
		</li>
		<li>More than one ICAT may be used together to share the load and
			provide more resilience.</li>
		<li>The setup script does not require calling with the configure
			option.</li>
		<li>The icat-setup.properties file now uses the keyword
			dbProperties rather than icatProperties.</li>
		<li>Fixed bug with handling of unary minus.</li>
	</ul>

	<h2>4.3.2</h2>
	<p>This is a bug fix release.</p>
	<ul>
		<li>A get call using the old (non-JPQL) syntax will now accept
			the INCLUDE keyword in lower or mixed case.</li>
	</ul>

	<h2>4.3.1</h2>
	<p>This is a bug fix release.</p>
	<ul>
		<li>The methods logout and refresh when called with an expired or
			otherwise invalid sessionId now throw an exception of type SESSION
			rather than INTERNAL.</li>
		<li>A small improvement to testicat has been made to show who you
			are logged in as.</li>
		<li>The relationship from DataCollection to
			DataCollectionParameters is now called parameters and can be accessed
			by getParameters and setParameters.</li>
	</ul>

	<h2>4.3.0</h2>
	<p>This includes schema changes and a number of speculative
		features.</p>
	<ul>
		<li>The "ICATCompat" service for backwards compatibility with
			ICAT 3.x has now been removed.</li>
		<li>A method "void refresh(String sid)" has been added to refresh
			an ICAT session.</li>
		<li>The notification mechanism has been completely changed.</li>
		<li>It is not legal in queries with an INCLUDE to use a "1" in
			conjunction with and entity name. This will now reliably throw an
			exception.</li>
		<li>A new call "boolean isAccessAllowed" has been created to test
			whether a specific access type is allowed.</li>
		<li>A call has been provided to return all the available entity
			names. This is of more use to tools than regular users.</li>
		<li>Column names in the Database table for UserGroup have been
			changed as they were inconsistent.</li>
		<li>The Rule entities are now store in a database table called
			RULE_. for compatibility with Microsoft SQLServer.</li>
		<li>A file indices.sql is being distributed with the .ear file
			with indices which may improve performance. You should assess whether
			or not each index will be useful to your installation for while an
			index can give a huge improvement to a query there is also a cost in
			maintaining an index.</li>
		<li>JPA mappings for floating point numbers now use precision 38
			and scale 19. This is still not good on Oracle as mentioned in the
			installation instructions.</li>
		<li>testicat.py (which replaces test.py) expects
			https://hostname:port rather than a pair of parameters</li>
		<li>Call logging has been added either to file or to a log table
			or both.</li>
		<li>Lucene free text search has been included via the new
			searchText call.</li>
		<li>Changed uniqueness constraints to:
			<dl>
				<dt>Datafile</dt>
				<dd>dataset, name (-location)</dd>
				<dt>Dataset</dt>
				<dd>investigation, name (-sample -type)</dd>
				<dt>Application</dt>
				<dd>facility, name, version (+facility)</dd>
				<dt>Sample</dt>
				<dd>investigation, name (-type)</dd>
				<dt>Investigation</dt>
				<dd>facility, name, visitid (-facilityCycle -instrument)</dd>
				<dt>SampleType</dt>
				<dd>facility, name, molecularFormula (+molecularFormula)</dd>
			</dl>
		</li>
		<li>Made all constraint fields not nullable. This is checked by
			ICAT to ensure that future changes do not break this rule.</li>
		<li>Add a string attribute: "arguments" to the job to store the
			program arguments that were used.</li>
		<li>Relationship between FacilityCycle and Investigation removed.</li>
		<li>Table between Investigation and Instrument added to represent
			many-to-many relationships between them.</li>
		<li>Added DataCollection and changed Job to make use if it.</li>
		<li>Group has been changed to Grouping as Group is a JPQL
			keyword.</li>
		<li>Add attribute 'url' to Instrument.</li>
		<li>Added new alternate query syntax that may be used in queries
			and authz rules. It is distinguished by starting with the keyword
			"SELECT".</li>
		<li>It is no longer considered an error to have no authz rules
			matching a search call - you just get no data back.</li>
		<li>Packaging now conforms to
			http://code.google.com/p/icatproject/wiki/ComponentGuidelines</li>
		<li>A command <kbd>icatadmin</kbd> has been introduced to perform
			operations for which the rule based authorization is not appropriate.
		</li>
		<li>Expired sessions are cleaned out of the database every hour.
		</li>
		<li>The generated client jar contains two packages:
			org.icatproject and org.icatproject_4_3_0. Normal users should use
			the org.icatproject one. The other exists primarily for TopCAT so
			that multiple ICAT clients can co-exist.</li>
		<li>The installation mechanism now has a single setup Python
			script which works both on Linux and Windows.</li>
	</ul>

	<h2>4.2.5</h2>
	<p>
		This is a bug fix release. If you already have 4.2.0, 4.2.1, 4.2.2,
		4.2.3 or 4.2.4 installed, then simply remove the old ear file and
		deploy the new one. If you have changed log4j.properties from the one
		supplied then add an entry to your icat.properties:
		<code>log4j.properties = log4j.properties</code>
		which tells the ICAT to use the existing log4j.properties file in the
		config directory rather than the built in one. If you have not changed
		it then it is preferable to delete the log4j.properties from the
		config directory to avoid any possible confusion. The log4j.properties
		file is no longer reread, if you have configured your own copy and
		wish to change it then you must at least reload ICAT for the
		properties file to be read again.
	</p>
	<ul>
		<li>A significant leak has been fixed which was causing an
			unlimited number of threads to be created. This has been addressed by
			changing the way in which the log4j.properties file is read. Only if
			you have a line in the icat.properties identifying a specific
			log4j.properties file will that file be used, otherwise a default
			file packaged within the .ear file will be used.</li>
	</ul>

	<h2>4.2.4</h2>
	<p>This is a bug fix release. If you already have 4.2.0, 4.2.1,
		4.2.2 or 4.2.3 installed, then simply remove the old ear file and
		deploy the new one.</p>
	<ul>
		<li>Version number updated to 4.2.4 and test updated to ensure
			that the version corresponds to the maven project version.</li>
		<li>LICENSE.txt file added to top directory of the source tree.</li>
		<li>Creating an Investigation which refers to a new
			InvestigationUser now works properly.</li>
		<li>Using INCLUDE with User and Group now works properly.
			Previously it could throw a null pointer exception.</li>
		<li>Database requirements have been made more precise in the
			deployment instructions.</li>
	</ul>

	<h2>4.2.3</h2>
	<p>This is a bug fix release. If you already have 4.2.0, 4.2.1 or
		4.2.2 installed, then simply remove the old ear file and deploy the
		new one.</p>
	<ul>
		<li>Two different error conditions were not being handled
			correctly in calls to createMany when a user attempted to violate a
			uniqueness constraint. In the case of a conflict with a pre-existing
			entry in ICAT the offset returned was -1. In the case that there were
			duplicates in the list passed in the call to createMany - rather than
			conflicts with existing database entries - an IcatException of type
			INTERNAL was being thrown, also with an offset of -1. These bugs are
			now fixed.</li>
	</ul>

	<h2>4.2.2</h2>
	<p>This is a bug fix release. If you already have 4.2.0 or 4.2.1
		installed, then simply remove the old ear file and deploy the new one.</p>
	<ul>
		<li>A bug causing read access to be denied in certain
			circumstances, when it should have been permitted, has been fixed.</li>
		<li>When attempting to format an error message about an invalid
			list of INCLUDES a null pointer exception is no longer thrown.</li>
	</ul>

	<h2>4.2.1</h2>
	<p>This is a bug fix release. If you already have 4.2.0 installed,
		then simply remove the old ear file and deploy the new one.</p>
	<ul>
		<li>Authorization rules without explicit relationships to groups
			(of the form "Investigation &lt;-&gt; InvestigationUser &lt;-&gt;
			User [name = :user]") now work properly.</li>
		<li>It is now possible to use boolean values in queries.
			Attributes can be compared against literal values of TRUE and FALSE
			(not case sensitive) as in "ParameterType [enforced = TRUE]"</li>
		<li>Null pointer exceptions were being throw with some
			authorization rules when using an Oracle database. This has now been
			fixed.</li>
	</ul>

	<h2>4.2.0</h2>
	<p>This introduces a clean mechanism for handling authentication
		plugins and provides significant speed enhancements.</p>
	<ul>
		<li>ICAT now contains no authentication plugins but it does
			provide an Authenticator interface for plugin writers. If you plan to
			use the new authn_db database authentication plugin you will need to
			manually move data from the old table to the new passwd table.</li>
		<li>The login call now accepts two parameters, the mnemonic for
			the authentication plugin and a map of credentials. This change
			necessitated the increase in the version number to 4.2.</li>
		<li>There was a serious performance bug in release 4.1 and to a
			lesser extent in 4.0. In both case this affected read operations -
			search and get. This bug in the marshalling of the XML has now been
			addressed.</li>
		<li>Previously JMS messages had the property "query" set to the
			primary key and the actual query value was not available. They are
			now assigned correctly to the properties "query" and "entityId".</li>
		<li>You will need an up-to-date version of JAX-WS such as the one
			packaged with Glassfish 3.1.2</li>
		<li>The main database schema is almost unchanged. The only
			difference is that some text fields have been made larger.</li>
		<li>A bug has been fixed in the handling of enum types in
			expressions.</li>

	</ul>

	<h2>4.1.1</h2>
	<p>This is a bug fix release.</p>
	<ul>
		<li>Aggregate functions (MIN, MAX, AVG, COUNT etc) no longer
			generate an internal exception.</li>
		<li>Minor improvements to the installation documentation.</li>
	</ul>

	<h2>4.1.0</h2>
	<p>This is the first release of ICAT4 which is meant to be
		approaching production quality.</p>
	<ul>
		<li>More changes to the API - too numerous to list here providing
			<ul>
				<li>support for pluggable authn,</li>
				<li>support for rule based authz,</li>
				<li>support for notifications and</li>
				<li>a powerful search mechanism</li>
			</ul>
		</li>
		<li>Database independent</li>
		<li>More regular schema with simple provenance mechanism</li>
	</ul>

	<h2>4.0.0</h2>
	<p>Technology preview release - not for production use</p>
	<ul>
		<li>Many changes to the API</li>
	</ul>

	<h2>3.3.4</h2>
	<ul>
		<li>Changed the JPA provider from TopLink to EclipseLink</li>
		<li>Removed Dataportal from the installation</li>
	</ul>

	<h2>3.3.3</h2>
	<p>Public release</p>
</body>
</html>

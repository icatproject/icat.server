<html>
<head>
<title>ICAT Server Installation</title>
</head>
<body>
	<h1>Overview</h1>
	<p>
		This document is made up of four sections, describing <a
			href="#installation">installation</a> , <a href="#post">post-installation
			work</a> , <a href="#performance">performance</a> and the <a
			href="#icatadmin">admin interface</a>
	</p>

	<h1>
		<a id="installation"></a> Installation
	</h1>
	<h2>Prerequisites</h2>
	<ul>
		<li>The icat distribution: <a
			href="${repoUrl}/org/icatproject/icat.server/${project.version}/icat.server-${project.version}-distro.zip">icat.server-${project.version}-distro.zip</a>
		</li>
		<li>Java 11+</li>
		<li>A suitable deployed application server that supports JakartaEE 10+. Testing has been carried out with Payara Server Community 6. Other applications servers such as GlassFish and WildFly may work but have not been tested.
			<a href="https://icatproject.org/installation/glassfish/">Glassfish/Payara installation instructions</a> are available.</li>
		<li>A database as described in <a
			href="https://icatproject.org/installation/database/">Database
				installation instructions</a> installed on the server
		</li>
		<li>Deployed ICAT authenticators.</li>
		<li>A deployed icat.lucene server it you plan to use free-text search.</li>
		<li>Python 3.6+ and the suds-community package installed on the server.</li>
	</ul>

	<h2>Summary of steps</h2>

	<ol>
		<li>Upgrade the database schema if you already have an ICAT
			installation.</li>
		<li>If you wish to install multiple servers each running an ICAT
			connected to the same database please see <a href="#cluster">Installing
				a group of ICATs</a>
		</li>
		<li>Please follow <a
			href="http://icatproject.org/installation/component/"> the
				generic installation instructions</a>
		</li>
		<li>See if it works.</li>
	</ol>

	<h2>
		<a id="cluster"></a> Installing a group of ICATs
	</h2>
	<p>If your facility depends upon a single ICAT instance then
		ingestion of data can be held up by a user making an expensive query.</p>

	<p>To avoid this it is suggested that you install multiple servers
		each running a Glassfish with an ICAT but all sharing one database and
		one icat.lucene server. It is recommended that you install the
		machines individually first and make sure that each works before tying
		them together. Finally ingestion can be directed to one node and the
		other nodes can be load balanced for user access by, for example, an
		Apache web server.</p>

	<p>All machines must use the same database and icat.lucene server</p>

	<p>Authentication can either be carried out on one machine - which
		has the advantage that you only have authenticator logs building up on
		that machine or each machine can host its own authenticators. If an
		icat.server is configured with the new style restful authenticators
		then more than one equivalent authenticator server may be specified to
		make the system more robust. If you use the old style where JNDI
		settings must be specified it is recommended for each icat.server to
		have its own authenticators.</p>

	<p>The icat.servers are linked by specifying a cluster parameter in
		the run.properties file for each machine. This parameter may be the
		same for each machine as the software tries to avoid sending messages
		to itself.</p>

	<p>
		You could then set up an Apache front end to do load balancing. This
		will probably just connect to the satellites leaving the central
		machine to handle ingestion of data. See <a
			href="http://icatproject.org/installation/apache-front-end/">Apache
			front end</a> for one way of doing this.
	</p>

	<h2>Schema upgrade</h2>
	<h3>Lucene database</h3>
	<p>
		Any existing lucene database should be removed. The location of
		this would have been specified in the previous icat.properties file.
		Ensure that the directory specified there is empty.
	</p>
	<h3>Database schema</h3>
	<p>
		The direct upgrade of the database schema is supported for icat.server
		4.7.0 and newer.  This is done automatically: the initialization of
		icat.server will create all missing tables, indices, and columns when
		the new version is deployed for the first time.
	</p>
	<p>
		For older ICAT installations, you need to upgrade to 4.7.0 first,
		following the
		<a href="https://repo.icatproject.org/site/icat/server/4.7.0/installation.html">install
		instructions of that version</a>. In a second step, you can make use of
		implied schema upgrade while installing the current version.
	</p>
	<h3>Database triggers (optional)</h3>
	<p>
		If you want the new attributes fileSize and fileCount in Dataset and
		Investigation to be updated automatically whenever a datafile or
		dataset is added/modified/deleted, you can also set up triggers in your
		database.  This can be done for MySQL or MariaDB by running
		<kbd>mysql -u icat -p icat &lt; create_triggers_mysql_5_0.sql</kbd>
		or for Oracle by running
		<kbd>sqlplus icat @create_triggers_oracle_5_0.sql</kbd>
		where in both cases it is assumed that the tables are owned by user
		"icat".  This automatically initializes the fileSize and fileCount of all
		existing datasets and investigations.  Note that ICAT should not be
		running while this is done to avoid inconsistencies.
	</p>

	<h2>The setup.properties file</h2>
	<dl>
		<dt>container</dt>
		<dd>
			Values must be chosen from: <a target="_blank"
				href="http://www.eclipse.org/eclipselink/api/2.6/org/eclipse/persistence/config/TargetServer.html">TargetServer</a>
			Though only Glassfish is working properly at the moment.
		</dd>
		<dt>home</dt>
		<dd>is the top level of the container installation. For Glassfish
			it must contain "glassfish/domains" and for JBoss (wildfly) it must
			contain jboss-modules.jar.</dd>
		<dt>port</dt>
		<dd>is the administration port of the container which is
			typically 4848 for Glassfish and 9990 for JBoss.</dd>
		<dt>secure</dt>
		<dd>must be set to true or false. If true then only https and not
			http connections will be allowed.</dd>
		<dt>db.driver</dt>
		<dd>is the name of the jdbc driver which must match the jar file
			installed in the container and matching your database.</dd>
		<dt>db.url</dt>
		<dd>url to connect to your database. For example:
			jdbc:mysql://localhost:3306/icat</dd>
		<dt>db.username</dt>
		<dd>username to connect to your database.</dd>
		<dt>db.password</dt>
		<dd>password to connect to your database.</dd>
		<dt>db.target</dt>
		<dd>
			This is optional and may be used to control the SQL generated by the
			JPA. Values must be chosen from: <a target="_blank"
				href="http://www.eclipse.org/eclipselink/api/2.6/org/eclipse/persistence/config/TargetDatabase.html">TargetDatabase</a>
		</dd>
		<dt>db.logging</dt>
		<dd>
			This is optional and if set to one of the values in <a
				target="_blank"
				href="http://www.eclipse.org/eclipselink/documentation/2.6/jpa/extensions/persistenceproperties_ref.htm#CHDGFDDH">Eclipse
				Link logging.level</a> controls the logging of JPA generated SQL
			statements.
		</dd>
	</dl>

	<h2>The logback.xml file</h2>

	<p>If you wish to modify the provided logging levels then rename
		logback.xml.example to logback.xml and edit to suit your needs.</p>

	<h2>The run.properties file</h2>

	<dl>
		<dt>lifetimeMinutes</dt>
		<dd>Defines the lifetime of an ICAT sessionid. You should avoid
			making it have a long duration as this increases the risk if it is
			intercepted, lost or stolen.</dd>

		<dt>rootUserNames</dt>
		<dd>Is a space separated list of user identifiers having full
			access to all tables. The format of the user identifier is determined
			by the chosen authentication plugin. The authn_db and authn_ldap
			plugins may be configured to either return the simple user name or to
			prepend it with a name identifying the mechanism. For example if
			there is a an entry "root" in the database then if the authn_db
			authenticator is configured without a mechanism then the user name to
			consider will be just "root", however if it has been configured with
			a mechanism of "db" then the string "db/root" must be specified.</dd>

		<dt>maxEntities</dt>
		<dd>Restrict total number of entities to return in a search or
			get call. This should be set as small as possible to protect the
			server from running out of memory. However if you set it too small it
			may prevent users from doing reasonable things.</dd>

		<dt>maxIdsInQuery</dt>
		<dd>For handling INCLUDEs, ICAT may generate queries which are
			not acceptable to the database system. To avoid this problem such
			queries are broken down. This is the maximum size of each chunk which
			must not exceed 1000 for Oracle.</dd>

		<dt>importCacheSize</dt>
		<dd>the size of a cache used during import to avoid an excessive
			number of calls to the database. The cache is dropped after each call
			to import to ensure that authorization rules are enforced. As the
			cache is short-lived, modifications to ICAT are unlikely to result in
			stale information being used from the cache.</dd>

		<dt>exportCacheSize</dt>
		<dd>the size of a cache used during export to avoid an excessive
			number of calls to the database. The cache is dropped after each call
			to export to ensure that authorization rules are enforced. As the
			cache is short-lived, modifications to ICAT are unlikely to result in
			stale information being used from the cache.</dd>

		<dt>authn.list</dt>
		<dd>is a space separated set of mnemonics for a user to select
			the authenticator in the login call. Authenticators are separate
			applications which may be "Remote EJBs", identified by jndi, if
			installed in the same container or they may be restful services
			identified by url. The list must not reference Remote EJBs which are
			not installed as these are checked when ICAT performs its
			initialisation; their absence will cause ICAT to not start.</dd>
		<dt>authn.&lt;mnemonic&gt;.url</dt>
		<dd>is a space separated list of the urls of machines with a
			restful authenticator service. This will take the form:
			https://example.com:443 There must be one such entry for each restful
			authenticator. If more than one url is provided the services
			referenced must be functionally equivalent. An invalid URL syntax
			will cause the ICAT server not to start. This must not be set for an
			EJB Authenticator.</dd>
		<dt>authn.&lt;mnemonic&gt;.jndi</dt>
		<dd>
			is the jndi name to locate an EJB authenticator. When you installed
			the authenticator a message would have appeared in the server.log
			stating the JNDI names. The name will start:
			<code>java:global/</code>
			There must be one such entry for each EJB authenticator. This must
			not be set for a restful Authenticator.
		</dd>
		<dt>authn.&lt;mnemonic&gt;.friendly</dt>
		<dd>is optional. It gives a name that a tool might use to label
			the plugin.</dd>
		<dt>authn.&lt;mnemonic&gt;.admin</dt>
		<dd>is optional. Set to true if you wish to indicate that this
			authenticator should only be advertised to administration tools.</dd>
		<dt>notification.list</dt>
		<dd>is optional. It is a space separated set of Entity names for
			which you with to generate notifications. For each one there must be
			another line saying under what conditions you wish to generate a
			notification for the entity.</dd>

		<dt>notification.&lt;entity name&gt;</dt>
		<dd>a string of letters taken from the set "C" and "U" indicating
			for which operations (create and update) you wish to be notified for
			that kind of operation on the entity.</dd>

		<dt>log.list</dt>
		<dd>is optional. If present it specifies a set of call types to
			log via JMS calls. The types are specified by a space separated list
			of values taken from READ, WRITE, SESSION, INFO.</dd>

		<dt>lucene.url</dt>
		<dd>This is optional. It is the machine url of the icat.lucene
			server if needed. It is needed for TopCAT to work.</dd>

		<dt>lucene.populateBlockSize</dt>
		<dd>This is ignored if lucene.url is not set. The number of
			entries to batch off to the lucene server when using lucenePopulate.</dd>

		<dt>lucene.directory</dt>
		<dd>This is ignored if lucene.url is not set. Path of a directory
			holding files for requests that are queued to go the icat.lucene
			server.</dd>

		<dt>lucene.backlogHandlerIntervalSeconds</dt>
		<dd>This is ignored if lucene.url is not set. How often to check
			the backlog file.</dd>

		<dt>lucene.enqueuedRequestIntervalSecond</dt>
		<dd>This is ignored if lucene.url is not set. How often to
			transmit lucene requests to the icat.lucene server.</dd>

		<dt>lucene.entitiesToIndex = Datafile Dataset Investigation InvestigationUser DatafileParameter DatasetParameter InvestigationParameter Sample</dt>
		<dd>The entities to index with Lucene. For example, remove 'Datafile' and 'DatafileParameter' if the number of datafiles exceeds lucene's limit of 2^32 entries in an index</dd>

		<dt>jms.topicConnectionFactory</dt>
		<dd>This is optional and may be used to override the default
			value of java:comp/DefaultJMSConnectionFactory</dd>

		<dt>key</dt>
		<dd>This is optional but if there is an IDS server in use and it
			has a key for digest protection of Datafile.location then this key
			value must be identical.</dd>
	</dl>

	<h2>Check that ICAT works</h2>
	<p>
		A small test program,
		<kbd>testicat, </kbd>
		will have been installed for you. This is a python script which
		requires that the suds client is available. This connects as one of
		the root users you defined as 'rootUserNames' in the icat.properties
		file. Invoke the script specifying the url of the machine on which the
		ICAT service is deployed (something like https://example.com:8181),
		the mnemonic for the chosen authentication plugin followed by the
		credentials for one of the root user names supported by that plugin.
		These credentials should be passed in as pairs of parameters with key
		followed by value. For example:
		<code>testicat https://example.com:8181 db username root
			password secret</code>
	</p>
	<p>It should report:</p>
	<blockquote>
		<code>
			Logged in as ... with 119.9... minutes to go <br /> Login, search,
			create, delete and logout operations were all successful.
		</code>
	</blockquote>
	<p>This script can be run at any time as it is almost harmless - it
		simply creates a "Group" with an unlikely name and removes it again.</p>
	<p>In case of problems, first erase the directory /tmp/suds and try
		the testicat again. If it still fails, look at the log files:
		server.log and icat.log which can both be found in the logs directory
		below your domain. Look also at the relevant authenticator log.</p>


	<h1>
		<a id="post"></a> Post-installation work
	</h1>
	<h2>Fresh Install</h2>
	<p>If this is a fresh install then you can use the import facility
		to do the initial icat population or you could use the icat manager to
		create rules, a Facility and other high level entities.</p>

	<p>
		If you are using Oracle the type NUMBER(38, 19) will have been used
		for all floating point numbers. This constrains the values that can be
		stored - they may be truncated or rejected. To fix this please execute
		the SQL statements in
		<kbd>fix_floats_oracle.sql</kbd>
	</p>
	<h2>In all cases</h2>
	Populate the lucene index by using the
	<a href="#icatadmin">icatadmin</a> tool.

	<h1>
		<a id="performance"></a> Performance
	</h1>

	To improve performance:
	<ul>
		<li>Consider creating the indices defined in indices.sql. Indices
			can make a huge difference to the database performance but there is
			also a small cost for each index.</li>
		<li>Make entities readable by anyone if they contain no sensitive
			information. This is generally the case for those entities that
			implement an many-to-many relationship. For example InvestigationUser
			relates Investigation to User but has no attributes. By making it
			world readable no access to Investigation or User is granted. An in
			memory cache of world readable entities is maintained by ICAT.</li>
		<li>Add entries to PublicStep to allow the INCLUDE mechanism to
			be less costly. PublicStep is explained in the ICAT Java Client User
			Manual. Its contents are also held in an in-memory cache for
			performance.</li>
	</ul>

	<h1>
		<a id="icatadmin"></a> The icatadmin tool
	</h1>

	<p>
		Administration operations have been added to the ICAT API and are
		accessible via the icatadmin tool which will have been installed by
		the
		<kbd>setup.py</kbd>
		script. It should be invoked as:
	</p>
	<blockquote>
		<code>icatadmin &lt;url&gt; &lt;plugin&gt;
			&lt;credentials&gt;... -- &lt;command&gt; &lt;args&gt;...</code>
	</blockquote>
	<p>to run a single command or</p>
	<blockquote>
		<code>icatadmin &lt;url&gt; &lt;plugin&gt;
			&lt;credentials&gt;... </code>
	</blockquote>
	<p>to be prompted for a series of commands as shown below. In
		either case if you specify '-' as the password you will be prompted
		for it. Note that in the single command case the "--" marker is needed
		to terminate the list of credentials. For example:</p>
	<blockquote>
		<code>icatadmin https://example.com:8181 db username root
			password secret -- properties</code>
	</blockquote>
	Only users mentioned in the rootUserNames of the icat.properties file
	are authorized to use this command.

	<dl>

		<dt>populate [&lt;entity name&gt;]</dt>
		<dd>re-populates lucene for the specified entity name. This is
			useful if the database has been modified directly rather than by
			using the ICAT API. This call is asynchronous and simply places the
			request in a set of entity types to be populated. When the request is
			processed all lucene entries of the specified entity type are first
			cleared then the corresponding icat entries are scanned to
			re-populate lucene. To find what it is doing please use the
			"populating" operation described below. It may also be run without an
			entity name in which case it will process all entities. The new
			lucene index will not be seen until it is completely rebuilt. While
			the index is being rebuilt ICAT can be used as normal as any lucene
			updates are stored to be applied later.</dd>

		<dt>populating</dt>
		<dd>returns a list of entity types to be processed for populating
			lucene. Normally the first item returned will be being processed
			currently.</dd>

		<dt>commit</dt>
		<dd>instructs lucene to update indices. Normally this is not
			needed as it is will be done periodically according to the value of
			lucene.commitSeconds</dd>

		<dt>clear</dt>
		<dd>stops any population and clears all the lucene indices.</dd>

	</dl>

</body>
</html>
